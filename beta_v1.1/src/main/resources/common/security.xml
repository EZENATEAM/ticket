<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

	<security:global-method-security secured-annotations="enabled" pre-post-annotations="enabled" />
	
	<!-- 보안 미적용 주소 -->
	<security:http pattern="/resources/**" security="none" />
	
	<security:http use-expressions="true">
		<!-- USER 권한이 있어야 접근 허용되는 주소 -->
		<security:intercept-url pattern="/user/**" access="hasRole('ROLE_USER')" />
		
		<!-- ADMIN 권한이 있어야 접근 허용되는 주소 -->
		<security:intercept-url pattern="/admin/**" access="hasRole('ROLE_ADMIN')" />
		<security:intercept-url pattern="/auth/**" access="hasRole('ROLE_ADMIN')" />

<!--	<security:intercept-url pattern="/auth/list" access="hasRole('ROLE_ADMIN')" />
		<security:intercept-url pattern="/auth/edit" access="hasRole('ROLE_ADMIN')" />
		<security:intercept-url pattern="/auth/delete" access="hasRole('ROLE_ADMIN')" /> -->

		<!-- 로그인 유저에게 접근이 허용되는 페이지 -->
<!--	<security:intercept-url pattern="/auth/view" access="hasAnyRole('ROLE_USER','ROLE_ADMIN')" /> -->
		
		<!-- 모두에게 허용할 주소 -->
		<security:intercept-url pattern="/**" access="permitAll" />
		<security:intercept-url pattern="/mail/**" access="permitAll" />
		
		<!-- 로그인 셋팅 -->
		<security:form-login	 login-page="/signin" 
						 default-target-url="/signinSuccess" 
						 login-processing-url="/j_spring_security_check" 
						 authentication-failure-url="/signinFailed" />
		<!-- 로그아웃 셋팅 -->
		<security:logout		 logout-url="/signout" 
						 logout-success-url="/" />
		<!-- 권한 인증 실패시 호출할 핸들러 -->
		<security:access-denied-handler ref="userDeniedHandler"/>
	</security:http>

	<security:authentication-manager>
		<security:authentication-provider user-service-ref="userService">
			<security:password-encoder ref="passwordEncoder" />
		</security:authentication-provider>
	</security:authentication-manager>
	
	<bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />
	<bean id="userDeniedHandler" class="com.spring.service.UserDeniedHandler"></bean>
</beans>